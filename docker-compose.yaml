version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    volumes:
      - ./.docker/zookeeper/zookeeper.properties:/etc/kafka/zookeeper.properties
      - ./.docker/zookeeper/data:/var/lib/zookeeper/data
      - ./.docker/zookeeper/log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - ./.docker/kafka/server.properties:/etc/kafka/server.properties
      - ./.docker/zookeeper/zookeeper.properties:/etc/kafka/zookeeper.properties
      - ./.docker/kafka/data:/logs
      - ./.docker/kafka/secrets:/etc/kafka/secrets
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CREATE_TOPICS: "ISSUE_CERTIFICATE:1:1,CERTIFICATION_RESPONSE:1:1"
      KAFKA_LOG_DIRS: /logs
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  node-ecommerce:
    build:
      context: ./
      dockerfile: .docker/node/Dockerfile
    working_dir: /usr/src/app
    entrypoint: dockerize -wait http://control-center:9021 -timeout 300s -wait-retry-interval 5s
    command: entrypoint.sh
    volumes:
      - ./ecommerce:/usr/src/app
      - /usr/src/app/node_modules
      - ./modules:/usr/src/modules
    ports:
      - 3333:3333
    depends_on:
      - kafka

  node-antifraud:
    build: ./service-antifraud
    entrypoint: dockerize -wait http://control-center:9021 -timeout 300s -wait-retry-interval 5s
    command: yarn dev
    volumes:
      - ./service-antifraud:/usr/src/app
      - /usr/src/app/node_modules
      - ./modules:/usr/src/modules
    depends_on:
      - node-ecommerce

  node-antifraud-2:
    build: ./service-antifraud
    entrypoint: dockerize -wait http://control-center:9021 -timeout 300s -wait-retry-interval 5s
    command: yarn dev
    volumes:
      - ./service-antifraud:/usr/src/app
      - /usr/src/app/node_modules
      - ./modules:/usr/src/modules
    depends_on:
      - node-ecommerce
      - node-antifraud

  node-email:
    build: ./service-email
    entrypoint: dockerize -wait http://control-center:9021 -timeout 300s -wait-retry-interval 5s
    command: yarn dev
    volumes:
      - ./service-email:/usr/src/app
      - /usr/src/app/node_modules
      - ./modules:/usr/src/modules
    depends_on:
      - node-ecommerce

  node-log:
    build: ./service-log
    entrypoint: dockerize -wait http://control-center:9021 -timeout 300s -wait-retry-interval 5s
    command: yarn dev
    volumes:
      - ./service-log:/usr/src/app
      - /usr/src/app/node_modules
      - ./modules:/usr/src/modules
    depends_on:
      - node-ecommerce
